#!/bin/bash

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Informa√ß√µes do projeto
REPO="JoaoPedr0Maciel/charm"
BINARY_NAME="charm"

echo -e "${GREEN}üöÄ Instalando Charm...${NC}"

# Detectar OS
OS=$(uname -s | tr '[:upper:]' '[:lower:]')
ARCH=$(uname -m)

case $OS in
    linux*)
        OS="linux"
        ;;
    darwin*)
        OS="darwin"
        ;;
    *)
        echo -e "${RED}‚ùå Sistema operacional n√£o suportado: $OS${NC}"
        exit 1
        ;;
esac

# Mapear arquitetura
case $ARCH in
    x86_64)
        ARCH="x86_64"
        ;;
    aarch64|arm64)
        ARCH="arm64"
        ;;
    *)
        echo -e "${RED}‚ùå Arquitetura n√£o suportada: $ARCH${NC}"
        exit 1
        ;;
esac

echo -e "${YELLOW}üì¶ Detectado: $OS $ARCH${NC}"

# Pegar a √∫ltima vers√£o
echo -e "${YELLOW}üîç Buscando √∫ltima vers√£o...${NC}"
LATEST_VERSION=$(curl -s "https://api.github.com/repos/$REPO/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

if [ -z "$LATEST_VERSION" ]; then
    echo -e "${RED}‚ùå N√£o foi poss√≠vel encontrar a √∫ltima vers√£o${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ √öltima vers√£o: $LATEST_VERSION${NC}"

# Construir nome do arquivo
if [ "$OS" = "darwin" ]; then
    OS_TITLE="Darwin"
elif [ "$OS" = "linux" ]; then
    OS_TITLE="Linux"
fi

FILE_NAME="${BINARY_NAME}_${LATEST_VERSION#v}_${OS_TITLE}_${ARCH}.tar.gz"
DOWNLOAD_URL="https://github.com/$REPO/releases/download/$LATEST_VERSION/$FILE_NAME"

echo -e "${YELLOW}‚¨áÔ∏è  Baixando $FILE_NAME...${NC}"

# Criar diret√≥rio tempor√°rio
TMP_DIR=$(mktemp -d)
cd "$TMP_DIR"

# Baixar arquivo
if ! curl -fsSL "$DOWNLOAD_URL" -o "$FILE_NAME"; then
    echo -e "${RED}‚ùå Erro ao baixar: $DOWNLOAD_URL${NC}"
    exit 1
fi

# Extrair
echo -e "${YELLOW}üìÇ Extraindo...${NC}"
tar -xzf "$FILE_NAME"

# Determinar diret√≥rio de instala√ß√£o
if [ -w "/usr/local/bin" ]; then
    INSTALL_DIR="/usr/local/bin"
elif [ -w "$HOME/.local/bin" ]; then
    INSTALL_DIR="$HOME/.local/bin"
    mkdir -p "$INSTALL_DIR"
else
    INSTALL_DIR="$HOME/bin"
    mkdir -p "$INSTALL_DIR"
fi

# Instalar
echo -e "${YELLOW}üì• Instalando em $INSTALL_DIR...${NC}"

if [ -w "$INSTALL_DIR" ]; then
    mv "$BINARY_NAME" "$INSTALL_DIR/"
    chmod +x "$INSTALL_DIR/$BINARY_NAME"
else
    echo -e "${YELLOW}üîê Permiss√£o necess√°ria para instalar em $INSTALL_DIR${NC}"
    sudo mv "$BINARY_NAME" "$INSTALL_DIR/"
    sudo chmod +x "$INSTALL_DIR/$BINARY_NAME"
fi

# Limpar
cd -
rm -rf "$TMP_DIR"

echo -e "${GREEN}‚ú® Charm instalado com sucesso!${NC}"
echo ""
echo -e "${YELLOW}üìù Uso:${NC}"
echo -e "  ${GREEN}charm get https://api.github.com/users/github${NC}"
echo ""

# Verificar se est√° no PATH
if ! command -v "$BINARY_NAME" &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  O diret√≥rio $INSTALL_DIR n√£o est√° no seu PATH${NC}"
    echo -e "${YELLOW}   Adicione ao seu ~/.bashrc ou ~/.zshrc:${NC}"
    echo -e "   ${GREEN}export PATH=\"\$PATH:$INSTALL_DIR\"${NC}"
    echo ""
fi

echo -e "${GREEN}üéâ Pronto para usar!${NC}"

